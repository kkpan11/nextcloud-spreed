# This workflow is provided via the organization template repository
#
# https://github.com/nextcloud/.github
# https://docs.github.com/en/actions/learn-github-actions/sharing-workflows-with-your-organization

name: Integration oci

on:
  pull_request:
    paths:
      # Only running on PR for this file to save CI time (otherwise pgsql only)
      - '.github/workflows/integration-oci.yml'
  schedule:
    - cron: "5 2 * * *"

permissions:
  contents: read

concurrency:
  group: integration-oci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest

    outputs:
      src: ${{ steps.changes.outputs.src}}

    steps:
      - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        id: changes
        continue-on-error: true
        with:
          filters: |
            src:
              - '.github/workflows/**'
              - 'appinfo/**'
              - 'lib/**'
              - 'templates/**'
              - 'tests/integration/**'
              - 'vendor/**'
              - 'vendor-bin/**'
              - '.php-cs-fixer.dist.php'
              - 'composer.json'
              - 'composer.lock'

  integration-oci:
    runs-on: ubuntu-22.04

    needs: changes
    if: needs.changes.outputs.src != 'false'

    strategy:
      fail-fast: false
      matrix:
        test-suite: ['callapi', 'chat', 'chat-2', 'command', 'conversation', 'conversation-2', 'federation', 'integration', 'sharing', 'sharing-2']
        php-versions: ['8.2']
        server-versions: ['master']
        guests-versions: ['master']
        call-summary-bot-versions: ['main']
        notifications-versions: ['master']

    services:
      oracle:
        image: ghcr.io/gvenzl/oracle-xe:11

        # Provide passwords and other environment variables to container
        env:
          ORACLE_RANDOM_PASSWORD: true
          APP_USER: autotest
          APP_USER_PASSWORD: owncloud

        # Forward Oracle port
        ports:
          - 1521:1521/tcp

        # Provide healthcheck script options for startup
        options: >-
          --health-cmd healthcheck.sh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Set app env
        run: |
          # Split and keep last
          echo "APP_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Checkout server
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          submodules: true
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}

      - name: Checkout app
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Checkout call_summary_bot app
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          repository: nextcloud/call_summary_bot
          path: apps/call_summary_bot
          ref: ${{ matrix.call-summary-bot-versions }}

      - name: Checkout guests app
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          repository: nextcloud/guests
          path: apps/guests
          ref: ${{ matrix.guests-versions }}

      - name: Checkout notifications app
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          repository: nextcloud/notifications
          path: apps/notifications
          ref: ${{ matrix.notifications-versions }}

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@c5fc0d8281aba02c7fda07d3a70cc5371548067d # v2
        with:
          php-version: ${{ matrix.php-versions }}
          # https://docs.nextcloud.com/server/stable/admin_manual/installation/source_installation.html#prerequisites-for-manual-installation
          extensions: bz2, ctype, curl, dom, fileinfo, gd, iconv, intl, json, libxml, mbstring, openssl, pcntl, posix, session, simplexml, xmlreader, xmlwriter, zip, zlib, oci8
          coverage: none
          ini-file: development
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up production dependencies
        working-directory: apps/${{ env.APP_NAME }}
        run: composer i --no-dev

      - name: Set up behat dependencies
        working-directory: apps/${{ env.APP_NAME }}/tests/integration
        run: composer i

      - name: Set up Nextcloud
        env:
          DB_PORT: 1521
        run: |
          mkdir data
          ./occ maintenance:install --verbose --database=oci --database-name=XE --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=autotest --database-pass=owncloud --admin-user admin --admin-pass admin
          ./occ config:system:set hashing_default_password --value=true --type=boolean
          ./occ app:enable --force ${{ env.APP_NAME }}
          ./occ app:enable --force call_summary_bot
          ./occ app:enable --force guests
          ./occ app:enable --force notifications

      - name: Run integration
        working-directory: apps/${{ env.APP_NAME }}/tests/integration
        run: bash run.sh features/${{ matrix.test-suite }}

      - name: Print logs
        if: always()
        run: |
          cat data/nextcloud.log

  summary:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: [changes, integration-oci]

    if: always()

    name: integration-oci-summary

    steps:
      - name: Summary status
        run: if ${{ needs.changes.outputs.src != 'false' && needs.integration-oci.result != 'success' }}; then exit 1; fi
